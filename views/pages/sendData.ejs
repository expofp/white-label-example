<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/9.5.1/jsoneditor.min.css" rel="stylesheet" type="text/css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/9.5.1/jsoneditor.min.js"></script>
    <title>Send data</title>
</head>
<body>
<%- include("../header.ejs") %>
<form id="form">
    <div id="jsoneditor" style="width: 100%; height: 600px;"></div>
    <div class="status"></div>
    <button type="submit">Send</button>
</form>

<script>
	window.onload = () => {
		const expo = "<%= expo %>";
		const scope = "<%= SCOPE %>";
		const signature = "<%= signature %>";

        const json = <%- JSON.stringify(data) %>;

		const container = document.getElementById("jsoneditor");
		const options = {
			mode: 'code',
			mainMenuBar: false,
		};
		const editor = new JSONEditor(container, options, json);

		const $form = document.getElementById("form");

		const $status = $form.querySelector(".status");
		const $button = $form.querySelector("button");

		$form.addEventListener("submit", (e) => {
			e.preventDefault();
			$status.classList.remove("invalid", "valid");
			$status.textContent = "";

			try {
				JSON.parse(editor.getText());
			} catch (error) {
				if (error instanceof SyntaxError) {
					$status.textContent = "Invalid json";
					$status.classList.add("invalid")
				}
				return;
			}

			$button.disabled = true;

			fetch("https://white-label.herokuapp.com/api/sendData", {
				method: "POST",
				headers: {
					"Content-Type": "application/json"
				},
				body: JSON.stringify({
					expo,
					scope,
					signature,
					data: editor.getText()
				})
			})
				.then((res) => {
					if (!res.ok) {
						return res.json().then((errorData) => {
							console.log(errorData);
							throw new Error(errorData.message);
						});
					} else {
						$status.classList.add("valid");
						$status.textContent = "Valid json";
					}
				}).catch((err) => {
				$status.classList.add("invalid");
				$status.textContent = err.message;
			}).finally(() => {
				$button.disabled = false;
			})
		})
	}
</script>
</body>
</html>
